<data name="OracleAdvancedStoredProcService">
    <config>
      <property name="org.wso2.ws.dataservice.driver">oracle.jdbc.driver.OracleDriver</property>
      <property name="org.wso2.ws.dataservice.protocol">jdbc:oracle:thin:@localhost:1521/xe</property>
      <property name="org.wso2.ws.dataservice.user">datauser</property>
      <property name="org.wso2.ws.dataservice.password">wso2</property>
      <property name="org.wso2.ws.dataservice.minpoolsize">2</property>
      <property name="org.wso2.ws.dataservice.maxpoolsize">100</property>
     
   </config>
   
   <!-- Query for a stored procedure with out params -->
   <query id="stored_procedure_with_out_params_query">
      <sql>CALL get103CustomerLim(?,?)</sql>
      <param name="customerNumber" sqlType="INTEGER" type="OUT" />
      <param name="customerName" sqlType="STRING" type="OUT" />
      <result element="Customers" rowName="Customer">
         <element name="customerNumber" column="customerNumber" />
         <element name="customerName" column="customerName" />
      </result>
   </query>
   
   <!-- Query for a stored procedure with out params and a result set -->
   <query id="stored_procedure_with_out_params_result_set_query">
      <sql>CALL get103CustomerFull(?,?,?,?,?)</sql>
      <param name="customerNumber" sqlType="INTEGER" type="OUT" />
      <param name="customerName" sqlType="STRING" type="OUT" />
      <param name="contactLastName" sqlType="STRING" type="OUT" />
      <param name="phone" sqlType="STRING" type="OUT" />
      <param name="city" sqlType="STRING" type="OUT" />    
            
      <result element="Customers" rowName="Customer">
         <element name="customerNumber" column="customerNumber" />
         <element name="customerName" column="customerName" />
         <element name="contactLastName" column="contactLastName" />
         <element name="phone" column="phone" />
         <element name="city" column="city" />
      </result>
   </query>
   
   <!-- Query for a stored procedure with out params and a result set -->
   <query id="stored_procedure_with_inout_params_result_set_query">
      <sql>CALL getCustomerFullWithNumber(?,?,?,?,?)</sql>
      <param name="customerNumber" sqlType="INTEGER" type="INOUT" />
      <param name="customerName" sqlType="STRING" type="OUT" />
      <param name="contactLastName" sqlType="STRING" type="OUT" />
      <param name="phone" sqlType="STRING" type="OUT" />
      <param name="city" sqlType="STRING" type="OUT" />  
      
      <result element="Customers" rowName="Customer">
         <element name="customerNumber" column="customerNumber" />
         <element name="customerName" column="customerName" />
         <element name="contactLastName" column="contactLastName" />
         <element name="phone" column="phone" />
         <element name="city" column="city" />
      </result>
   </query>

   <query id="stored_procedure_with_ref_cursors_query">
      <sql>call getCustomersByNumber(:id, :my_rc, :name)</sql>
      <result element="Customers" rowName="Customer">
         <element column="contactFirstName" name="contactFirstName" xsdType="string"/>
         <element column="phone" name="phone" xsdType="string"/>
      </result>
      <param name="id" sqlType="INTEGER"/>
      <param name="my_rc" sqlType="ORACLE_REF_CURSOR" type="OUT"/>
      <param name="name" sqlType="STRING" type="OUT"/>
   </query>

   <query id="stored_procedure_with_ref_cursors_varray_query" useConfig="default">
        <sql>call addAndGetMemberGroup(:id, :name, :city, mem_array_type(:member),:groupNameRef)</sql>
        <result element="Groups" rowName="Group">
            <element column="Name" name="Name" xsdType="string"/>
        </result>
        <param name="id" ordinal="1" sqlType="INTEGER"/>
        <param name="name" ordinal="2" sqlType="STRING"/>
        <param name="city" ordinal="3" sqlType="STRING"/>
        <param name="member" ordinal="4" paramType="ARRAY" sqlType="STRING"/>
        <param name="groupNameRef" ordinal="5" sqlType="ORACLE_REF_CURSOR" type="OUT"/>
   </query>

   <query id="delete_added_groups_query" useConfig="default">
         <sql>DELETE FROM GROUPS  WHERE GROUPNUM=:id</sql>
         <param name="id" ordinal="1" sqlType="INTEGER"/>
   </query>
   
   <operation name="stored_procedure_with_out_params_op">
      <call-query href="stored_procedure_with_out_params_query">
      </call-query>
   </operation>
 
   <operation name="stored_procedure_with_out_params_result_set_op">
      <call-query href="stored_procedure_with_out_params_result_set_query">
      </call-query>
   </operation>
   
   <operation name="stored_procedure_with_inout_params_result_set_op">
      <call-query href="stored_procedure_with_inout_params_result_set_query">
         <with-param name="customerNumber" query-param="customerNumber" />
      </call-query>
   </operation>

   <operation name="stored_procedure_with_ref_cursors_op">
      <call-query href="stored_procedure_with_ref_cursors_query">
         <with-param name="id" query-param="id" />
      </call-query>
   </operation>

   <operation name="stored_procedure_with_ref_cursors_varray_op">
        <call-query href="stored_procedure_with_ref_cursors_varray_query">
            <with-param name="id" query-param="id" />
            <with-param name="name" query-param="name" />
            <with-param name="city" query-param="city" />
            <with-param name="member" query-param="member" />
        </call-query>
   </operation>

   <operation name="delete_groups_op">
        <call-query href="delete_added_groups_query">
            <with-param name="id" query-param="id"/>
        </call-query>
   </operation>
      
</data>

